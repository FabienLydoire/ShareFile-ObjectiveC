//
//  SFStorageCentersEntity.m
//
//  Autogenerated by a tool.
//  Copyright (c) 2016 Citrix ShareFile. All rights reserved.
//

#import "SFHttpMethodConstants.h"
#import "SFEntityConstants.h"
#import "SFStorageCentersEntity.h"
#import "SFODataEntityBase.h"
#import "SFStorageCenter.h"
#import "SFMetadata.h"


@implementation SFStorageCentersEntity
- (SFApiQuery *)getWithUrl:(NSURL *)url {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFStorageCenter class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_StorageCenters];
    [sfApiQuery addIds:url];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)updateWithUrl:(NSURL *)url andSc:(SFStorageCenter *)sc {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFStorageCenter class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_StorageCenters];
    [sfApiQuery addIds:url];
    [sfApiQuery setBody:sc];
    [sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
    return sfApiQuery;
}

- (SFApiQuery *)deleteWithUrl:(NSURL *)url {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    
    [sfApiQuery setFrom:kSFEntities_StorageCenters];
    [sfApiQuery addIds:url];
    [sfApiQuery setHttpMethod:kSFHttpMethodDELETE];
    return sfApiQuery;
}

- (SFApiQuery *)getByZoneWithUrl:(NSURL *)url {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFStorageCenter class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery setAction:@"StorageCenters"];
    [sfApiQuery addIds:url];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)createByZoneWithUrl:(NSURL *)url andStorageCenter:(SFStorageCenter *)storageCenter {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFStorageCenter class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery setAction:@"StorageCenters"];
    [sfApiQuery addIds:url];
    [sfApiQuery setBody:storageCenter];
    [sfApiQuery setHttpMethod:kSFHttpMethodPOST];
    return sfApiQuery;
}

- (SFApiQuery *)updateByZoneWithZUrl:(NSURL *)zUrl scid:(NSString *)scid andStorageCenter:(SFStorageCenter *)storageCenter {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFStorageCenter class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery setAction:@"StorageCenters"];
    [sfApiQuery addIds:zUrl];
    [sfApiQuery addActionIds:scid];
    [sfApiQuery setBody:storageCenter];
    [sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
    return sfApiQuery;
}

- (SFApiQuery *)deleteByZoneWithZUrl:(NSURL *)zUrl andScid:(NSString *)scid {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery setAction:@"StorageCenters"];
    [sfApiQuery addIds:zUrl];
    [sfApiQuery addActionIds:scid];
    [sfApiQuery setHttpMethod:kSFHttpMethodDELETE];
    return sfApiQuery;
}

- (SFApiQuery *)getMetadataWithZUrl:(NSURL *)zUrl andScid:(NSString *)scid {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFMetadata class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery setAction:@"StorageCenters"];
    [sfApiQuery addIds:zUrl];
    [sfApiQuery addActionIds:scid];
    [sfApiQuery addSubAction:@"Metadata"];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)createMetadataWithZUrl:(NSURL *)zUrl scid:(NSString *)scid andMetadata:(NSArray *)metadata {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFMetadata class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery setAction:@"StorageCenters"];
    [sfApiQuery addIds:zUrl];
    [sfApiQuery addActionIds:scid];
    [sfApiQuery addSubAction:@"Metadata"];
    [sfApiQuery setBody:metadata];
    [sfApiQuery setHttpMethod:kSFHttpMethodPOST];
    return sfApiQuery;
}

- (SFApiQuery *)deleteMetadataWithZUrl:(NSURL *)zUrl scid:(NSString *)scid andName:(NSString *)name {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery setAction:@"StorageCenters"];
    [sfApiQuery addIds:zUrl];
    [sfApiQuery addActionIds:scid];
    [sfApiQuery addSubAction:@"Metadata"];
    [sfApiQuery addQueryString:@"name" withValue:name];
    [sfApiQuery setHttpMethod:kSFHttpMethodDELETE];
    return sfApiQuery;
}

@end
