//
//  SFZonesEntity.m
//
//  Autogenerated by a tool.
//  Copyright (c) 2016 Citrix ShareFile. All rights reserved.
//

#import "SFHttpMethodConstants.h"
#import "SFEntityConstants.h"
#import "SFZonesEntity.h"
#import "SFODataEntityBase.h"
#import "SFZone.h"
#import "SFAccount.h"
#import "SFMetadata.h"


@implementation SFZonesEntity
- (SFApiQuery *)getWithServices:(NSString *)services andIncludeDisabled:(NSNumber *)includeDisabled {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFZone class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery addQueryString:@"services" withValue:services];
    [sfApiQuery addQueryString:@"includeDisabled" withValue:includeDisabled];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)getWithUrl:(NSURL *)url andSecret:(NSNumber *)secret {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFZone class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery addIds:url];
    [sfApiQuery addQueryString:@"secret" withValue:secret];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)createWithZone:(SFZone *)zone {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFZone class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery setBody:zone];
    [sfApiQuery setHttpMethod:kSFHttpMethodPOST];
    return sfApiQuery;
}

- (SFApiQuery *)updateWithUrl:(NSURL *)url andZone:(SFZone *)zone {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFZone class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery addIds:url];
    [sfApiQuery setBody:zone];
    [sfApiQuery setHttpMethod:kSFHttpMethodPATCH];
    return sfApiQuery;
}

- (SFApiQuery *)deleteWithUrl:(NSURL *)url force:(NSNumber *)force andNewDefaultZoneId:(NSString *)newDefaultZoneId {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery addIds:url];
    [sfApiQuery addQueryString:@"force" withValue:force];
    [sfApiQuery addQueryString:@"newDefaultZoneId" withValue:newDefaultZoneId];
    [sfApiQuery setHttpMethod:kSFHttpMethodDELETE];
    return sfApiQuery;
}

- (SFApiQuery *)resetSecretWithUrl:(NSURL *)url {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFZone class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery setAction:@"ResetSecret"];
    [sfApiQuery addIds:url];
    [sfApiQuery setHttpMethod:kSFHttpMethodPOST];
    return sfApiQuery;
}

- (SFApiQuery *)getTenantsWithParentUrl:(NSURL *)parentUrl {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFAccount class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery setAction:@"Tenants"];
    [sfApiQuery addIds:parentUrl];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)createTenantsWithParentUrl:(NSURL *)parentUrl andAccountId:(NSString *)accountId {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFAccount class];
    sfApiQuery.isODataFeed = NO;
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery setAction:@"Tenants"];
    [sfApiQuery addIds:parentUrl];
    [sfApiQuery addQueryString:@"accountId" withValue:accountId];
    [sfApiQuery setHttpMethod:kSFHttpMethodPOST];
    return sfApiQuery;
}

- (SFApiQuery *)deleteTenantsWithParentUrl:(NSURL *)parentUrl id:(NSString *)Id newDefaultZoneId:(NSString *)newDefaultZoneId andExpireItems:(NSNumber *)expireItems {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery setAction:@"Tenants"];
    [sfApiQuery addIds:parentUrl];
    [sfApiQuery addActionIds:Id];
    [sfApiQuery addQueryString:@"newDefaultZoneId" withValue:newDefaultZoneId];
    [sfApiQuery addQueryString:@"expireItems" withValue:expireItems];
    [sfApiQuery setHttpMethod:kSFHttpMethodDELETE];
    return sfApiQuery;
}

- (SFApiQuery *)getMetadataWithUrl:(NSURL *)url {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFMetadata class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery setAction:@"Metadata"];
    [sfApiQuery addIds:url];
    [sfApiQuery setHttpMethod:kSFHttpMethodGET];
    return sfApiQuery;
}

- (SFApiQuery *)createMetadataWithUrl:(NSURL *)url andMetadata:(NSArray *)metadata {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    sfApiQuery.responseClass = [SFMetadata class];
    sfApiQuery.isODataFeed = YES;
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery setAction:@"Metadata"];
    [sfApiQuery addIds:url];
    [sfApiQuery setBody:metadata];
    [sfApiQuery setHttpMethod:kSFHttpMethodPOST];
    return sfApiQuery;
}

- (SFApiQuery *)deleteMetadataWithUrl:(NSURL *)url andName:(NSString *)name {
    SFApiQuery *sfApiQuery = [[SFApiQuery alloc] initWithClient:self.client];
    
    [sfApiQuery setFrom:kSFEntities_Zones];
    [sfApiQuery setAction:@"Metadata"];
    [sfApiQuery addIds:url];
    [sfApiQuery addQueryString:@"name" withValue:name];
    [sfApiQuery setHttpMethod:kSFHttpMethodDELETE];
    return sfApiQuery;
}

@end
